---
import { marked } from 'marked';
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';

	const response = await fetch('https://graphql.datocms.com/', {
	method: 'POST',
	headers: {
		'Content-Type': 'application/json',
		Accept: 'application/json',
		Authorization: `Bearer ${import.meta.env.DATOCMS_API_KEY}`,
	},
	body: JSON.stringify({
			query: `{
					allBlogpages {
						h1(locale: pl)
						img {
							alt(locale: pl)
							url
						}
						slot(locale: pl, markdown: true)
						_createdAt
					}
				}
			`,
		}),
	});

	const json = await response.json();
	const data = json.data.allBlogpages;

const { slug } = Astro.params;
const page = data.find((page) => page.h1 === slug);

if (!page) return Astro.redirect("/404");
const { slot, h1, _createdAt, img } = page;
const content = marked.parse(slot);
---

<html lang="pl">
	<head>
		<BaseHead title={h1} description={h1} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
				max-height: 400px;
				object-fit: cover;
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
			}
			.last-updated-on {
				font-style: italic;
			}
		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{img.url && <img width={1020} height={510} src={img.url} alt={img.alt}/>}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							{
								_createdAt && (
									<div class="last-updated-on">
										{new Date(_createdAt).toLocaleString().split(',')[0]}
									</div>
								)
							}
						</div>
						<h1>{h1}</h1>
						<hr />
					</div>
					<div set:html={content} />
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
